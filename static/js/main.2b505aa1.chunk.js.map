{"version":3,"sources":["assets/close.svg","assets/check.svg","assets/add.svg","assets/heart.svg","assets/heart-filled.svg","assets/pen.svg","assets/trash-bin.svg","assets/play.svg","assets/back.svg","components/modal/Modal.js","components/Item.js","components/Items.js","components/modal/SearchModal.js","components/pages/strTruncate.js","components/pages/SearchItem.js","components/pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","props","handleSubmit","e","preventDefault","editItem","state","handleClose","nasaId","title","description","mediaType","imgUrl","fileUrl","handleChange","bind","this","setState","item","_id","event","target","name","value","showHideClassname","show","className","onClick","src","closeImg","alt","onSubmit","htmlFor","id","type","onChange","style","flex","checkImg","React","Component","Item","showModal","hideModal","href","playimg","photographer","dateCreated","str","num","length","slice","error","console","strTruncate","markFavorite","favorite","heart","heartFilled","editimg","deleteItem","deleteimg","Items","renderItems","items","map","key","Fragment","to","addImg","SearchModal","addItem","redirect","prevProps","SearchItem","renderModal","result","data","nasa_id","undefined","media_type","date_created","searchUrl","axios","get","then","res","filter","url","endsWith","catch","author","isAudio","Search","fetchSearchResult","query","cancel","CancelToken","source","cancelToken","token","resultNotFoundMsg","collection","results","message","loading","isCancel","handleOnInputChange","renderSearchResultsChild","renderSearchResults","Object","keys","backImg","placeholder","App","db","updateOne","displayItems","err","insertOne","$set","deleteOne","client","Stitch","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","displayItemsOnLoad","auth","loginWithCredential","AnonymousCredential","find","limit","asArray","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b505aa1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.5d73447f.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.5dc41d67.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.5b875795.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.15aff7cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-filled.1dc208da.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.f6baaf74.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-bin.f4b0a28b.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.50c5aad9.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.c37b3ba6.svg\";","import React from \"react\";\r\nimport closeImg from '../../assets/close.svg';\r\nimport '../../Modal.css';\r\nimport checkImg from '../../assets/check.svg';\r\n\r\nclass Modal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nasaId: '',\r\n            title: '',\r\n            description: '',\r\n            mediaType: '',\r\n            imgUrl: '',\r\n            fileUrl: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            nasaId: this.props.item._id,\r\n            title: this.props.item.title,\r\n            description: this.props.item.description,\r\n            mediaType: this.props.item.mediaType,\r\n            imgUrl: this.props.item.imgUrl,\r\n            fileUrl: this.props.item.fileUrl,\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editItem(this.state);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        const showHideClassname = this.props.show ? \"modal display-block\" : \"modal display-none\";\r\n        return (\r\n            <div className={showHideClassname}>\r\n                <div className=\"modal-main\">\r\n                    <h2 className=\"modal-header\">Edit</h2>\r\n                    <img\r\n                        onClick={this.props.handleClose}\r\n                        className=\"close\"\r\n                        src={closeImg}\r\n                        alt=\"close\" />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"title-label\" htmlFor=\"title-input\">\r\n                                Title\r\n                            </label>\r\n                            <input\r\n                                className=\"input\"\r\n                                name=\"title\"\r\n                                id=\"title-input\"\r\n                                type=\"text\"\r\n                                value={this.state.title}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"description-label\" htmlFor=\"description-input\">\r\n                                Description\r\n                            </label>\r\n                            <input\r\n                                name=\"description\"\r\n                                id=\"description-input\"\r\n                                value={this.state.description}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"media-label\" htmlFor=\"media-input\">\r\n                                Type\r\n                            </label>\r\n                            <select\r\n                                name=\"mediaType\"\r\n                                id=\"media-input\">\r\n                                <option\r\n                                    value={this.state.mediaType}\r\n                                    onChange={this.handleChange}>\r\n                                    {this.state.mediaType}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"img-label\" htmlFor=\"img-input\">\r\n                                Link preview image url:\r\n                            </label>\r\n                            <input\r\n                                name=\"imgUrl\"\r\n                                id=\"img-input\"\r\n                                type=\"text\"\r\n                                value={this.state.imgUrl}\r\n                                onChange={this.handleChange} />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"file-label\" htmlFor=\"file-input\">\r\n                                Link file url:\r\n                            </label>\r\n                            <input\r\n                                name=\"fileUrl\"\r\n                                id=\"file-input\"\r\n                                type=\"text\"\r\n                                value={this.state.fileUrl}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"button-box\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"save-btn\"\r\n                                style={{ flex: '1' }}\r\n                            >\r\n                                <img className=\"checkimg\" src={checkImg} alt=\"check-img\"/> \r\n                                Save</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from './modal/Modal';\r\nimport heart from '../assets/heart.svg';\r\nimport heartFilled from '../assets/heart-filled.svg';\r\nimport editimg from '../assets/pen.svg';\r\nimport deleteimg from '../assets/trash-bin.svg';\r\nimport playimg from '../assets/play.svg';\r\n\r\nclass Item extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n        }\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ show: true });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col\">\r\n                <a href={this.props.item.fileUrl}>\r\n                    <div className=\"play-btn\">\r\n                        <img className=\"playimg\" src={playimg} alt=\"play_button\" />\r\n                    </div>\r\n                    <img className=\"video\"\r\n                        alt={this.props.item._id}\r\n                        src={this.props.item.imgUrl}\r\n                    />\r\n                </a>\r\n                <div className=\"author\">\r\n                    {this.props.item.photographer}\r\n                    <p className=\"datecreated\">\r\n                        {this.props.item.dateCreated}\r\n                    </p>\r\n                </div>\r\n                <div className=\"title\">\r\n                    {this.props.item.title}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {strTruncate(this.props.item.description, 100)}\r\n                </div>\r\n                <div>\r\n                    <button className=\"favorite\" onClick={this.props.markFavorite.bind(this, this.props.item._id)}>\r\n                        {!this.props.item.favorite && <img src={heart} alt=\"favorite_button\" />}\r\n                        {this.props.item.favorite && <img src={heartFilled} alt=\"favorite_button\" />}\r\n                    </button>\r\n                    <button className=\"edit\" onClick={this.showModal}><img src={editimg} alt=\"edit_button\" /></button>\r\n                    <button className=\"delete\" onClick={this.props.deleteItem.bind(this, this.props.item._id)}><img src={deleteimg} alt=\"delete_button\" /></button>\r\n                </div>\r\n                <Modal show={this.state.show} handleClose={this.hideModal} item={this.props.item} editItem={this.props.editItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction strTruncate(str, num) {\r\n    try {\r\n        // return full str length if str length smaller/equal than num.\r\n        if (str.length <= num) {\r\n            return str;\r\n        }\r\n\r\n        // return truncated str\r\n        return str.slice(0, num) + \"...\";\r\n    } catch (error) {\r\n        console.error(`Failed to truncate string: ${error}`)\r\n    }\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item';\r\nimport { Link } from 'react-router-dom';\r\nimport addImg from '../assets/add.svg';\r\n\r\nclass Items extends React.Component {\r\n\r\n    renderItems = () => {\r\n        return (\r\n            this.props.items.map((item) => {\r\n                return (\r\n                    <Item\r\n                        key={item._id}\r\n                        item={item}\r\n                        editItem={this.props.editItem}\r\n                        markFavorite={this.props.markFavorite}\r\n                        deleteItem={this.props.deleteItem}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"header\">\r\n                    <h1 className=\"nasa-collection\">NASA Collection</h1>\r\n                    <Link to=\"/search\">\r\n                        <button className=\"add\">\r\n                            <img className=\"addimg\" src={addImg} alt=\"add-img\"/> \r\n                            Add new item\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.renderItems()}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items;","import React from \"react\";\r\nimport closeImg from '../../assets/close.svg';\r\nimport '../../Modal.css';\r\nimport { Redirect } from 'react-router';\r\nimport checkImg from '../../assets/check.svg';\r\n\r\nclass SearchModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nasaId: '',\r\n            title: '',\r\n            description: '',\r\n            photographer: '',\r\n            dateCreated: '',\r\n            mediaType: '',\r\n            imgUrl: '',\r\n            fileUrl: '',\r\n            redirect: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.imgUrl !== prevProps.imgUrl) {\r\n            this.setState({\r\n                nasaId: this.props.nasaId,\r\n                title: this.props.title,\r\n                photographer: this.props.photographer,\r\n                dateCreated: this.props.dateCreated,\r\n                description: this.props.description,\r\n                mediaType: this.props.mediaType,\r\n                imgUrl: this.props.imgUrl,\r\n                fileUrl: this.props.fileUrl,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addItem(this.state);\r\n        this.setState({ redirect: true })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/' />;\r\n        }\r\n        const showHideClassname = this.props.show ? \"modal display-block\" : \"modal display-none\";\r\n        const { title, description, mediaType, imgUrl, fileUrl } = this.state;\r\n        return (\r\n            <div className={showHideClassname}>\r\n                <div className=\"modal-main\">\r\n                    <h2 className=\"modal-header\">Edit</h2>\r\n                    <img\r\n                        onClick={this.props.handleClose}\r\n                        className=\"close\"\r\n                        src={closeImg}\r\n                        alt=\"close\" />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"title-label\" htmlFor=\"title-input\">\r\n                                Title\r\n                            </label>\r\n                            <input\r\n                                className=\"input\"\r\n                                name=\"title\"\r\n                                id=\"title-input\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"description-label\" htmlFor=\"description-input\">\r\n                                Description\r\n                            </label>\r\n                            <input\r\n                                name=\"description\"\r\n                                id=\"description-input\"\r\n                                value={description}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"media-label\" htmlFor=\"media-input\">\r\n                                Type\r\n                            </label>\r\n                            <select\r\n                                name=\"mediaType\"\r\n                                id=\"media-input\"\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <option value={mediaType}>\r\n                                    {mediaType}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"img-label\" htmlFor=\"img-input\">\r\n                                Link preview image url:\r\n                            </label>\r\n                            <input\r\n                                name=\"imgUrl\"\r\n                                id=\"img-input\"\r\n                                type=\"text\"\r\n                                value={imgUrl}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"formbox\">\r\n                            <label className=\"file-label\" htmlFor=\"file-input\">\r\n                                Link file url:\r\n                            </label>\r\n                            <input\r\n                                name=\"fileUrl\"\r\n                                id=\"file-input\"\r\n                                type=\"text\"\r\n                                value={fileUrl}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"add-btn\"\r\n                                style={{ flex: '1' }}\r\n                            >\r\n                                <img className=\"checkimg\" src={checkImg} alt=\"check-img\"/>\r\n                                Add to Collection\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchModal;","export function strTruncate(str, num) {\r\n    try {\r\n        // return full str length if str length smaller/equal than num.\r\n        if (str.length <= num) {\r\n            return str;\r\n        }\r\n\r\n        // return truncated str\r\n        return str.slice(0, num) + \"...\";\r\n    } catch (error) {\r\n        console.error(`Failed to truncate string: ${error}`)\r\n    }    \r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport '../../Search.css';\r\nimport addImg from '../../assets/add.svg';\r\nimport SearchModal from '../modal/SearchModal';\r\nimport { strTruncate } from './strTruncate.js';\r\n\r\nclass SearchItem extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            imgUrl: '',\r\n            fileUrl: '',\r\n        }\r\n    }\r\n\r\n    renderModal = () => {\r\n        return (\r\n            <SearchModal\r\n                show={this.state.show}\r\n                nasaId={this.props.result.data[0].nasa_id}\r\n                title={this.props.result.data[0].title}\r\n                photographer={(this.props.result.data[0].photographer !== undefined) ? this.props.result.data[0].photographer : this.props.result.data[0].media_type}\r\n                dateCreated={this.props.result.data[0].date_created}\r\n                description={this.props.result.data[0].description}\r\n                mediaType={this.props.result.data[0].media_type}\r\n                imgUrl={this.state.imgUrl[0]}\r\n                fileUrl={this.state.fileUrl[0]}\r\n                handleClose={this.hideModal}\r\n                addItem={this.props.addItem}\r\n            />\r\n        );\r\n    }\r\n\r\n    showModal = () => {\r\n        const searchUrl = `https://images-assets.nasa.gov/${this.props.result.data[0].media_type}/${this.props.result.data[0].nasa_id}/collection.json`;\r\n        axios.get(searchUrl)\r\n            .then(res => {\r\n                this.setState({\r\n                    show: true,\r\n                    imgUrl: res.data.filter((url) => url.endsWith('~thumb.jpg')),\r\n                    fileUrl: res.data.filter((url) => {\r\n                        switch (this.props.result.data[0].media_type) {\r\n                            case \"video\":\r\n                                return (url.endsWith('.mp4'));\r\n                            case \"image\":\r\n                                return (url.endsWith('~orig.jpg'));\r\n                            case \"audio\":\r\n                                return (url.endsWith('~orig.mp3'));\r\n                            default:\r\n                                return \"File url not found.\";\r\n                        }\r\n                    }),\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    show: true,\r\n                    imgUrl: 'Can not get data',\r\n                    fileUrl: 'Can not get data',\r\n                })\r\n            });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    render() {\r\n        const author = (this.props.result.data[0].photographer !== undefined) ? this.props.result.data[0].photographer : this.props.result.data[0].media_type;\r\n        const isAudio = (this.props.result.data[0].media_type === 'audio') ? true : false;\r\n        return (\r\n            <div className=\"col\">\r\n                {!isAudio &&\r\n                    <img className=\"video\"\r\n                        alt={`${this.props.result.data[0].nasa_id}`}\r\n                        src={`https://images-assets.nasa.gov/${this.props.result.data[0].media_type}/${this.props.result.data[0].nasa_id}/${this.props.result.data[0].nasa_id}~thumb.jpg`}\r\n                    />\r\n                }\r\n                <div className=\"author\">\r\n                    {author}\r\n                    <p className=\"datecreated\">\r\n                        {this.props.result.data[0].date_created}\r\n                        {/* TODO: Formate date */}\r\n                    </p>\r\n                </div>\r\n                <div className=\"title\">\r\n                    {this.props.result.data[0].title}\r\n                </div>\r\n                <div className=\"description\">\r\n                    {strTruncate(this.props.result.data[0].description, 100)}\r\n                </div>\r\n                <div>\r\n                    <button className=\"add-collection\" onClick={this.showModal}>\r\n                        <img className=\"add-collection-img\" src={addImg} alt=\"add_button\"/>\r\n                        Add to NASA Collection\r\n                    </button>\r\n                </div>\r\n                {this.renderModal()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchItem;","import React from 'react';\r\nimport axios from 'axios';\r\nimport '../../Search.css';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchItem from './SearchItem';\r\nimport backImg from '../../assets/back.svg';\r\nimport { strTruncate } from './strTruncate.js';\r\n\r\nclass Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            results: {},\r\n            message: '',\r\n            loading: false,\r\n        }\r\n        this.cancel = '';\r\n    }\r\n\r\n    fetchSearchResult = (query) => {\r\n        const searchUrl = `https://images-api.nasa.gov/search?q=${query}`;\r\n\r\n        if (this.cancel) {\r\n            this.cancel.cancel();\r\n        }\r\n\r\n        this.cancel = axios.CancelToken.source();\r\n\r\n        axios.get(searchUrl, {\r\n            cancelToken: this.cancel.token\r\n        })\r\n            .then(res => {\r\n                const resultNotFoundMsg = !res.data.collection.items.length\r\n                    ? 'There is no result.'\r\n                    : '';\r\n\r\n                this.setState({\r\n                    results: res.data.collection.items,\r\n                    message: resultNotFoundMsg,\r\n                    loading: false,\r\n                })\r\n            })\r\n            .catch(error => {\r\n                if (axios.isCancel(error) || error) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: 'Fail to fetch data.'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleOnInputChange = (event) => {\r\n        const query = event.target.value;\r\n        this.setState({ query: query, message: '', loading: true }, () => {\r\n            if (query) {\r\n                this.fetchSearchResult(query);\r\n            } else {\r\n                this.setState({ result: {} });\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    renderSearchResultsChild = () => {\r\n        const { results } = this.state;\r\n        return (\r\n            <div className=\"row\">\r\n                {results.length && results.map(result => {\r\n                    return (\r\n                        <SearchItem result={result} key={result.data[0].nasa_id} addItem={this.props.addItem} />\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSearchResults = () => {\r\n        const { results } = this.state;\r\n        if (Object.keys(results).length && results.length) {\r\n            return (\r\n                <div className=\"row\">\r\n                    {results.map(result => {\r\n                        const author = (result.data[0].photographer !== undefined) ? result.data[0].photographer : result.data[0].media_type\r\n                        const isAudio = (result.data[0].media_type === 'audio') ? true : false;\r\n                        return (\r\n                            <div className=\"col\" key={result.data[0].nasa_id}>\r\n                                {!isAudio &&\r\n                                    <img className=\"video\"\r\n                                        alt={`${result.data[0].nasa_id}`}\r\n                                        src={`https://images-assets.nasa.gov/${result.data[0].media_type}/${result.data[0].nasa_id}/${result.data[0].nasa_id}~thumb.jpg`}\r\n                                    />\r\n                                }\r\n                                <div className=\"author\">\r\n                                    {author}\r\n                                    <p className=\"datecreated\">\r\n                                        {result.data[0].date_created}\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"title\">\r\n                                    {result.data[0].title}\r\n                                </div>\r\n                                <div className=\"description\">\r\n                                    {strTruncate(result.data[0].description, 100)}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query, message, loading } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/\">\r\n                    <button className=\"back\">\r\n                        <img className=\"backimg\" src={backImg} alt=\"back-img\"/>\r\n                        Back to Collection\r\n                    </button>\r\n                </Link>\r\n                <h2 className=\"heading\">Search from NASA</h2>\r\n                <div className=\"search-label\" htmlFor=\"search-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"query\"\r\n                        value={query}\r\n                        id=\"search-input\"\r\n                        placeholder=\"Search ...\"\r\n                        onChange={this.handleOnInputChange}\r\n                    />\r\n                </div>\r\n\r\n                {/*  Result */}\r\n                {!loading && this.renderSearchResultsChild()}\r\n\r\n                {/* Error Message */}\r\n                <p className=\"message\">{message}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React from 'react';\nimport Items from './components/Items';\nimport Search from './components/pages/Search';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {\n  Stitch,\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n\n  componentDidMount() {\n    // Initialize the App Client\n    this.client = Stitch.initializeDefaultAppClient(\"nasa-ohcab\");\n    // Get a MongoDB Service Client\n    // This is used for logging in and communicating with Stitch\n    const mongodb = this.client.getServiceClient(\n      RemoteMongoClient.factory,\n      \"mongodb-atlas\"\n    );\n    // Get a reference to the todo database\n    this.db = mongodb.db(\"nasa\");\n    this.displayItemsOnLoad();\n  }\n\n  displayItemsOnLoad() {\n    // Anonymously log in and display comments on load\n    this.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(this.displayItems())\n      .catch(console.error);\n  }\n\n  displayItems() {\n    // query the remote DB and update the component state\n    this.db\n      .collection(\"items\")\n      .find({}, { limit: 1000 })\n      .asArray()\n      .then(items => {\n        this.setState({ items: items });\n      });\n  }\n\n  editItem = (item) => {\n    this.db\n      .collection(\"items\")\n      .updateOne({\n        _id: item.nasaId\n      }, {\"$set\": {\n        title: item.title,\n        description: item.description,\n        mediaType: item.mediaType,\n        imgUrl: item.imgUrl,\n        fileUrl: item.fileUrl\n      }})\n      .then(this.displayItems())\n      .catch(err => console.error(`Failed to find and update document: ${err}`));\n  }\n\n  addItem = (item) => {\n    // insert the todo into the remote Stitch DB\n    // then re-query the DB and display the new todos\n    this.db\n      .collection(\"items\")\n      .insertOne({\n        _id: item.nasaId,\n        title: item.title,\n        photographer: item.photographer,\n        dateCreated: item.dateCreated,\n        description: item.description,\n        mediaType: item.mediaType,\n        imgUrl: item.imgUrl,\n        fileUrl: item.fileUrl,\n        favorite: false\n      })\n      .then(this.displayItems())\n      .catch(err => console.error(`Failed to create document: ${err}`));\n  }\n\n  markFavorite = (id) => {\n    this.state.items.map(item => {\n      if (item._id === id) {\n        this.db\n          .collection(\"items\")\n          .updateOne({\n            _id: id\n          }, {\n            $set: {favorite: !item.favorite},\n          })\n          .then(this.displayItems())\n          .catch(err => console.error(`Failed to find and update document: ${err}`));\n      }\n      return (this.displayItems());\n    })\n  }\n\n  deleteItem = (id) => {\n    this.state.items.map(item => {\n      if (item._id === id) {\n        this.db\n          .collection(\"items\")\n          .deleteOne({\n            _id: id\n          })\n          .then(this.displayItems())\n          .catch(err => console.error(`Failed to remove: ${err}`));\n      }\n      return (this.displayItems());\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact path=\"/\" render={(props) => (\n            <Items {...props}\n              items={this.state.items}\n              editItem={this.editItem}\n              markFavorite={this.markFavorite}\n              deleteItem={this.deleteItem}\n            />\n          )}\n          />\n          <Route path=\"/search\" render={(props) => <Search {...props} db={this.db} addItem={this.addItem} />} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}